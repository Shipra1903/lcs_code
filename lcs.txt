#include <iostream>
#include<bits/stdc++.h>
using namespace std;

void lcs(string s1,string s2){
	int n = s1.size();
	int m = s2.size();
	vector<vector<int>> dp(n+1,vector<int>(m+1,0));
	for(int ind1=0;ind1<=n;ind1++){
		dp[ind1][0] = 0;
	}
	for(int ind2=0;ind2<=m;ind2++){
		dp[0][ind2] = 0;
	}
	for(int ind1=1;ind1<=n;ind1++){
		for(int ind2=1;ind2<=m;ind2++){
			if(s1[ind1-1]==s2[ind2-1]){
				dp[ind1][ind2] = 1+dp[ind1-1][ind2-1];
			}
			else{
				dp[ind1][ind2] = 0 + max(dp[ind1-1][ind2],dp[ind1][ind2-1]);
			}
		}
	}
	int i = n , j=m;
	int len_lcs = dp[n][m];
	string ans;
	while(i>0 && j>0){
		if(s1[i-1]==s2[j-1]){
			ans.push_back(s1[i-1]);
			i--;
			j--;
		}
		else if(dp[i-1][j] > dp[i][j-1]){
			i--;
		}
		else{
			j--;
		}
		
	}
	reverse(ans.begin(),ans.end());
	cout<<ans;
}

int main() {
	string s1 = "ABCDGH";
    string s2 = "ACDGHR";

  cout << "The Longest Common Subsequence is ";
  lcs(s1, s2);
}